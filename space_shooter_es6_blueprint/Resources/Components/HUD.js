'use strict';

function buildFontDescription(font, size) {
    var fd;
    fd = new Atomic.UIFontDescription();
    fd.id = font;
    fd.size = size;
    return fd;
}

module.exports.component = function (self) {
    var node = self.node;
    var view = new Atomic.UIView();

    var layout = new Atomic.UILayout();
    layout.rect = view.rect;
    //layout.axis = Atomic.UI_AXIS_Y;
    layout.layoutPosition = Atomic.UI_LAYOUT_POSITION_GRAVITY;

    view.addChild(layout);

    //var uiStyle = Atomic.cache.getResource("XMLFile", "UI/DefaultStyle.xml");
    //view.defaultStyle = uiStyle;

    var scoreText = new Atomic.UITextField();
    scoreText.text = "Score: 0";
    scoreText.setFontDescription(buildFontDescription('Vera', 24));
    scoreText.color = [0, 1, 0, 1];
    scoreText.gravity = Atomic.UI_GRAVITY_RIGHT | Atomic.UI_GRAVITY_TOP;
    layout.addChild(scoreText);

    var titleText = new Atomic.UITextField();
    titleText.text = "Atomic Space Game";
    titleText.setFontDescription(buildFontDescription('Vera', 18));
    titleText.color = [0, 1, 0, 1];
    titleText.gravity = Atomic.UI_GRAVITY_LEFT | Atomic.UI_GRAVITY_TOP;
    layout.addChild(titleText);

    var healthText = new Atomic.UITextField();
    healthText.text = "Health: 10";
    titleText.setFontDescription(buildFontDescription('Vera', 18));
    healthText.color = [0, 1, 0, 1];
    healthText.gravity = Atomic.UI_GRAVITY_RIGHT | Atomic.UI_GRAVITY_BOTTOM;
    layout.addChild(healthText);

    var gameText = new Atomic.UITextField();
    titleText.setFontDescription(buildFontDescription('Vera', 40));
    gameText.color = [0, 1, 0, 1];
    gameText.gravity = Atomic.UI_GRAVITY_ALL;
    layout.addChild(gameText);

    if (Atomic.platform === "iOS" || Atomic.platform === "Android") {
        self.node.createJSComponent("TouchInput");
    }

    var inspectorFields = {};

    // using start to initialize the script component
    self.start = function start() {};

    self.updateScore = function (value) {
        scoreText.text = "Score: " + value;
    };

    self.updateHealth = function (value) {
        healthText.text = "Health: " + value;
    };

    self.updateGameText = function (text) {
        gameText.text = text;
    };

    self.update = function update(timeStep) {};
};
//# sourceMappingURL=data:application/json;base64,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QUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUM5QixZQUFRLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxjQUFjLENBQUM7QUFDekMsVUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFFMUIsUUFBSSxNQUFNLENBQUMsUUFBUSxLQUFLLEtBQUssSUFBSSxNQUFNLENBQUMsUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUM1RCxZQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFlBQVksQ0FBQyxDQUFDO0tBQzdDOztBQUVELFFBQUksZUFBZSxHQUFHLEVBQUUsQ0FBQzs7O0FBR3pCLFFBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxLQUFLLEdBQUcsRUFBRSxDQUFDOztBQUVqQyxRQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsS0FBSyxFQUFFO0FBQ2hDLGlCQUFTLENBQUMsSUFBSSxHQUFHLFNBQVMsR0FBRyxLQUFLLENBQUM7S0FDdEMsQ0FBQzs7QUFFRixRQUFJLENBQUMsWUFBWSxHQUFHLFVBQVUsS0FBSyxFQUFFO0FBQ2pDLGtCQUFVLENBQUMsSUFBSSxHQUFHLFVBQVUsR0FBRyxLQUFLLENBQUM7S0FDeEMsQ0FBQzs7QUFFRixRQUFJLENBQUMsY0FBYyxHQUFHLFVBQVUsSUFBSSxFQUFFO0FBQ2xDLGdCQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztLQUN4QixDQUFDOztBQUVGLFFBQUksQ0FBQyxNQUFNLEdBQUcsU0FBUyxNQUFNLENBQUMsUUFBUSxFQUFFLEVBRXZDLENBQUM7Q0FDTCxDQUFDIiwiZmlsZSI6IkhVRC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gYnVpbGRGb250RGVzY3JpcHRpb24oZm9udCwgc2l6ZSkge1xuICAgIHZhciBmZDtcbiAgICBmZCA9IG5ldyBBdG9taWMuVUlGb250RGVzY3JpcHRpb24oKTtcbiAgICBmZC5pZCA9IGZvbnQ7XG4gICAgZmQuc2l6ZSA9IHNpemU7IFxuICAgIHJldHVybiBmZDtcbn1cblxubW9kdWxlLmV4cG9ydHMuY29tcG9uZW50ID0gZnVuY3Rpb24gKHNlbGYpIHtcbiAgICB2YXIgbm9kZSA9IHNlbGYubm9kZTtcbiAgICB2YXIgdmlldyA9IG5ldyBBdG9taWMuVUlWaWV3KCk7XG5cbiAgICB2YXIgbGF5b3V0ID0gbmV3IEF0b21pYy5VSUxheW91dCgpO1xuICAgIGxheW91dC5yZWN0ID0gdmlldy5yZWN0O1xuICAgIC8vbGF5b3V0LmF4aXMgPSBBdG9taWMuVUlfQVhJU19ZO1xuICAgIGxheW91dC5sYXlvdXRQb3NpdGlvbiA9IEF0b21pYy5VSV9MQVlPVVRfUE9TSVRJT05fR1JBVklUWTtcblxuICAgIHZpZXcuYWRkQ2hpbGQobGF5b3V0KTtcblxuICAgIC8vdmFyIHVpU3R5bGUgPSBBdG9taWMuY2FjaGUuZ2V0UmVzb3VyY2UoXCJYTUxGaWxlXCIsIFwiVUkvRGVmYXVsdFN0eWxlLnhtbFwiKTtcbiAgICAvL3ZpZXcuZGVmYXVsdFN0eWxlID0gdWlTdHlsZTtcblxuICAgIHZhciBzY29yZVRleHQgPSBuZXcgQXRvbWljLlVJVGV4dEZpZWxkKCk7XG4gICAgc2NvcmVUZXh0LnRleHQgPSBcIlNjb3JlOiAwXCI7XG4gICAgc2NvcmVUZXh0LnNldEZvbnREZXNjcmlwdGlvbihidWlsZEZvbnREZXNjcmlwdGlvbignVmVyYScsIDI0KSk7XG4gICAgc2NvcmVUZXh0LmNvbG9yID0gWzAsIDEsIDAsIDFdO1xuICAgIHNjb3JlVGV4dC5ncmF2aXR5ID0gQXRvbWljLlVJX0dSQVZJVFlfUklHSFQgfCBBdG9taWMuVUlfR1JBVklUWV9UT1A7XG4gICAgbGF5b3V0LmFkZENoaWxkKHNjb3JlVGV4dCk7XG5cblxuXG4gICAgdmFyIHRpdGxlVGV4dCA9IG5ldyBBdG9taWMuVUlUZXh0RmllbGQoKTtcbiAgICB0aXRsZVRleHQudGV4dCA9IFwiQXRvbWljIFNwYWNlIEdhbWVcIjtcbiAgICB0aXRsZVRleHQuc2V0Rm9udERlc2NyaXB0aW9uKGJ1aWxkRm9udERlc2NyaXB0aW9uKCdWZXJhJywgMTgpKTtcbiAgICB0aXRsZVRleHQuY29sb3IgPSBbMCwgMSwgMCwgMV07XG4gICAgdGl0bGVUZXh0LmdyYXZpdHkgPSBBdG9taWMuVUlfR1JBVklUWV9MRUZUIHwgQXRvbWljLlVJX0dSQVZJVFlfVE9QO1xuICAgIGxheW91dC5hZGRDaGlsZCh0aXRsZVRleHQpO1xuXG5cbiAgICB2YXIgaGVhbHRoVGV4dCA9IG5ldyBBdG9taWMuVUlUZXh0RmllbGQoKTtcbiAgICBoZWFsdGhUZXh0LnRleHQgPSBcIkhlYWx0aDogMTBcIjtcbiAgICB0aXRsZVRleHQuc2V0Rm9udERlc2NyaXB0aW9uKGJ1aWxkRm9udERlc2NyaXB0aW9uKCdWZXJhJywgMTgpKTtcbiAgICBoZWFsdGhUZXh0LmNvbG9yID0gWzAsIDEsIDAsIDFdO1xuICAgIGhlYWx0aFRleHQuZ3Jhdml0eSA9IEF0b21pYy5VSV9HUkFWSVRZX1JJR0hUIHwgQXRvbWljLlVJX0dSQVZJVFlfQk9UVE9NO1xuICAgIGxheW91dC5hZGRDaGlsZChoZWFsdGhUZXh0KTtcblxuICAgIHZhciBnYW1lVGV4dCA9IG5ldyBBdG9taWMuVUlUZXh0RmllbGQoKTtcbiAgICB0aXRsZVRleHQuc2V0Rm9udERlc2NyaXB0aW9uKGJ1aWxkRm9udERlc2NyaXB0aW9uKCdWZXJhJywgNDApKTtcbiAgICBnYW1lVGV4dC5jb2xvciA9IFswLCAxLCAwLCAxXTtcbiAgICBnYW1lVGV4dC5ncmF2aXR5ID0gQXRvbWljLlVJX0dSQVZJVFlfQUxMO1xuICAgIGxheW91dC5hZGRDaGlsZChnYW1lVGV4dCk7XG5cbiAgICBpZiAoQXRvbWljLnBsYXRmb3JtID09PSBcImlPU1wiIHx8IEF0b21pYy5wbGF0Zm9ybSA9PT0gXCJBbmRyb2lkXCIpIHtcbiAgICAgICAgc2VsZi5ub2RlLmNyZWF0ZUpTQ29tcG9uZW50KFwiVG91Y2hJbnB1dFwiKTtcbiAgICB9XG5cbiAgICB2YXIgaW5zcGVjdG9yRmllbGRzID0ge307XG5cbiAgICAvLyB1c2luZyBzdGFydCB0byBpbml0aWFsaXplIHRoZSBzY3JpcHQgY29tcG9uZW50XG4gICAgc2VsZi5zdGFydCA9IGZ1bmN0aW9uIHN0YXJ0KCkge307XG5cbiAgICBzZWxmLnVwZGF0ZVNjb3JlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHNjb3JlVGV4dC50ZXh0ID0gXCJTY29yZTogXCIgKyB2YWx1ZTtcbiAgICB9O1xuXG4gICAgc2VsZi51cGRhdGVIZWFsdGggPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgaGVhbHRoVGV4dC50ZXh0ID0gXCJIZWFsdGg6IFwiICsgdmFsdWU7XG4gICAgfTtcblxuICAgIHNlbGYudXBkYXRlR2FtZVRleHQgPSBmdW5jdGlvbiAodGV4dCkge1xuICAgICAgICBnYW1lVGV4dC50ZXh0ID0gdGV4dDtcbiAgICB9O1xuXG4gICAgc2VsZi51cGRhdGUgPSBmdW5jdGlvbiB1cGRhdGUodGltZVN0ZXApIHtcblxuICAgIH07XG59O1xuIl19