{"version":3,"sources":["Ui/CustomUIWindow.ts"],"names":["CustomUIWindow","CustomUIWindow.constructor","CustomUIWindow.openWindow","CustomUIWindow.closeWindow"],"mappings":"AAAA,6BAA0B,yBAAyB,CAAC,CAAA;AAEpD;;;GAGG;AACH;IASIA,wBAAYA,MAAMA,EAAEA,cAAcA;QATtCC,iBAsCCA;QArCGA,WAAMA,GAAmBA,IAAIA,CAACA;QAE9BA,kBAAaA,GAAGA,EAAEA,CAACA;QAEnBA,mBAAcA,GAAUA,IAAIA,CAACA;QAC7BA,WAAMA,GAAiBA,IAAIA,CAACA;QAIxBA,IAAIA,CAACA,cAAcA,GAAGA,cAAcA,CAACA;QACrCA,IAAIA,CAACA,MAAMA,GAAGA,MAAMA,CAACA;QACrBA,IAAIA,CAACA,SAASA,GAAGA,wBAASA,CAACA,SAASA,CAACA,UAACA,KAAKA;YAAEA,sBAAeA;iBAAfA,WAAeA,CAAfA,sBAAeA,CAAfA,IAAeA;gBAAfA,qCAAeA;;YACxDA,EAAEA,CAACA,CAACA,KAAKA,IAAIA,KAAIA,CAACA,aAAaA,CAACA,CAACA,CAACA;gBAC9BA,KAAIA,CAACA,aAAaA,CAACA,KAAKA,CAACA,CAACA,KAAKA,CAACA,KAAIA,EAAEA,YAAYA,CAACA,CAACA;YACxDA,CAACA;QACLA,CAACA,CAACA,CAACA;IACPA,CAACA;IAEDD,mCAAUA,GAAVA,UAAWA,OAEVA;QAFUE,uBAEVA,GAFUA;YACTA,cAAcA,EAAEA,MAAMA,CAACA,2BAA2BA;SACnDA;QAEGA,IAAMA,MAAMA,GAAGA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,MAAMA,CAACA,QAAQA,EAAEA,CAACA;QACnDA,MAAMA,CAACA,QAAQA,GAAGA,OAAOA,CAACA,cAAcA,CAACA;QACzCA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,cAAcA,CAACA,CAACA;QACjCA,MAAMA,CAACA,kBAAkBA,EAAEA,CAACA;QAE5BA,IAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA;IACjCA,CAACA;IAEDF,oCAAWA,GAAXA;QACIG,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACdA,IAAIA,CAACA,MAAMA,CAACA,GAAGA,EAAEA,CAACA;YAClBA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,CAACA;QACvBA,CAACA;QACDA,wBAASA,CAACA,WAAWA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA;IAC1CA,CAACA;IACLH,qBAACA;AAADA,CAtCA,AAsCCA,IAAA;AAtCD;gCAsCC,CAAA","file":"Ui/CustomUIWindow.js","sourcesContent":["import { uiChannel } from '../Modules/gameChannels';\n\n/**\n * wrapper to be used for ui windows.  Will handle loading up the layout and\n * setting some properties.\n */\nexport default class CustomUIWindow {\n    window:Atomic.UIWindow = null;\n\n    channelTopics = {};\n\n    layoutFilename:string = null;\n    uiView:Atomic.UIView = null;\n    private channelId:number;\n\n    constructor(uiView, layoutFilename) {\n        this.layoutFilename = layoutFilename;\n        this.uiView = uiView;\n        this.channelId = uiChannel.subscribe((topic, ...messageParms) => {\n            if (topic in this.channelTopics) {\n                this.channelTopics[topic].apply(this, messageParms);\n            }\n        });\n    }\n\n    openWindow(options = {\n      windowSettings: Atomic.UI_WINDOW_SETTINGS_TITLEBAR\n    }) {\n\n        const window = this.window = new Atomic.UIWindow();\n        window.settings = options.windowSettings;\n        window.load(this.layoutFilename);\n        window.resizeToFitContent();\n\n        this.uiView.addChild(window);\n    }\n\n    closeWindow() {\n        if (this.window) {\n            this.window.die();\n            this.window = null;\n        }\n        uiChannel.unsubscribe(this.channelId);\n    }\n}\n"],"sourceRoot":"/source/"}