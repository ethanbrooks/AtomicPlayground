{"version":3,"sources":["Ui/hud.ui.ts"],"names":["Hud","Hud.constructor","Hud.openWindow","Hud.bindModel","Hud.closeWindow"],"mappings":";;;;;AAAA,+BAA2B,kBAAkB,CAAC,CAAA;AAC9C,6BAA0B,yBAAyB,CAAC,CAAA;AAEpD;IAAiCA,uBAAcA;IAW3CA,aAAYA,MAAMA;QACdC,kBAAMA,MAAMA,EAAEA,cAAcA,CAACA,CAACA;QANlCA,kBAAaA,GAAGA;YACZA,UAAUA,EAAEA,IAAIA,CAACA,WAAWA;YAC5BA,UAAUA,EAAEA,IAAIA,CAACA,SAASA;SAC7BA,CAACA;IAIFA,CAACA;IAEDD,wBAAUA,GAAVA;QACIE,gBAAKA,CAACA,UAAUA,YAACA;YACbA,cAAcA,EAAEA,MAAMA,CAACA,uBAAuBA;SACjDA,CAACA,CAACA;QAEHA,IAAMA,GAAGA,GAAGA,IAAIA,CAACA,MAAMA,CAACA;QACxBA,GAAGA,CAACA,OAAOA,CAACA,CAACA,CAACA,EAAEA,MAAMA,CAACA,QAAQA,CAACA,MAAMA,GAAGA,EAAEA,EAAEA,MAAMA,CAACA,QAAQA,CAACA,KAAKA,EAAEA,MAAMA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA;QAC7FA,IAAIA,CAACA,MAAMA,GAAGA,GAAGA,CAACA,SAASA,CAAqBA,WAAWA,CAACA,CAACA;QAC7DA,IAAIA,CAACA,OAAOA,GAAGA,GAAGA,CAACA,SAASA,CAAqBA,cAAcA,CAACA,CAACA;QACjEA,IAAIA,CAACA,SAASA,GAAGA,GAAGA,CAACA,SAASA,CAAqBA,cAAcA,CAACA,CAACA;QAEnEA,wBAASA,CAACA,WAAWA,CAACA,UAAUA,CAACA,CAACA;QAClCA,wBAASA,CAACA,WAAWA,CAACA,mBAAmBA,CAACA,CAACA;IAC/CA,CAACA;IAEDF,uBAASA,GAATA,UAAUA,KAAKA;QACXG,IAAIA,CAACA,MAAMA,CAACA,OAAOA,CAACA,KAAKA,CAACA,MAAMA,CAACA,CAACA;QAClCA,IAAIA,CAACA,OAAOA,CAACA,OAAOA,CAACA,KAAKA,CAACA,gBAAgBA,CAACA,CAACA;QAC7CA,IAAIA,CAACA,SAASA,CAACA,OAAOA,CAACA,KAAKA,CAACA,SAASA,CAACA,CAACA;IAC5CA,CAACA;IAEDH,yBAAWA,GAAXA;QACII,gBAAKA,CAACA,WAAWA,WAAEA,CAACA;QACpBA,wBAASA,CAACA,WAAWA,CAACA,UAAUA,CAACA,CAACA;IACtCA,CAACA;IACLJ,UAACA;AAADA,CAxCA,AAwCCA,EAxCgC,wBAAc,EAwC9C;AAxCD;qBAwCC,CAAA","file":"Ui/hud.ui.js","sourcesContent":["import CustomUIWindow from './CustomUIWindow';\nimport { uiChannel } from '../Modules/gameChannels';\n\nexport default class Hud extends CustomUIWindow {\n\n    health: Atomic.UITextField;\n    enemies: Atomic.UITextField;\n    turnCount: Atomic.UITextField;\n\n    channelTopics = {\n        'hide:hud': this.closeWindow,\n        'bind:hud': this.bindModel\n    };\n\n    constructor(uiView) {\n        super(uiView, 'Ui/hud.ui.tb');\n    }\n\n    openWindow() {\n        super.openWindow({\n            windowSettings: Atomic.UI_WINDOW_SETTINGS_NONE\n        });\n\n        const wnd = this.window;\n        wnd.setRect([0, Atomic.graphics.height - 50, Atomic.graphics.width, Atomic.graphics.height]);\n        this.health = wnd.getWidget<Atomic.UITextField>('txtHealth');\n        this.enemies = wnd.getWidget<Atomic.UITextField>('txtRemaining');\n        this.turnCount = wnd.getWidget<Atomic.UITextField>('txtTurnCount');\n\n        uiChannel.sendMessage('show:log');\n        uiChannel.sendMessage('show:instructions');\n    }\n\n    bindModel(model) {\n        this.health.setText(model.health);\n        this.enemies.setText(model.enemiesRemaining);\n        this.turnCount.setText(model.turnCount);\n    }\n\n    closeWindow() {\n        super.closeWindow();\n        uiChannel.sendMessage('hide:log');\n    }\n}\n"],"sourceRoot":"/source/"}